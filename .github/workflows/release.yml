name: Release app

on: 
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: develop
          fetch-depth: 0
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.5'
          channel: 'stable'
          cache: true
          architecture: x64
      - run: flutter pub get
      # 改系統時區
      - name: Setup timezone
        run: sudo timedatectl set-timezone Asia/Taipei
      - name: Get current date
        id: date
      # 取得系統日期 月日年時分
        run: echo "MY_DATE=$(date "+%m%d%y%H%M")" >> $GITHUB_ENV
      # 保存日期至 Environment variable 做使用
      - name: Environment variable
        env:
          NUMBER: ${{ env.MY_DATE }}
      # 暫時解法.. 修改第7行'+'以後的小版號
        run: | 
          sed -i '7 s/\+[^,]*$/'+"$NUMBER"'/g' pubspec.yaml
      # ipa
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 14
      - name: Install the Apple certificate and provisioning profile
        env:
          RELEASE_CERTIFICATE_BASE64: ${{ secrets.RELEASE_CERTIFICATE_BASE64 }}
          BUILD_CERTIFICATE_BASE64: ${{ secrets.DEV_CERTIFICATE_BASE64 }}
          DEV_P12_PASSWORD: ${{ secrets.DEV_P12_PASSWORD }}
          RELEASE_P12_PASSWORD: ${{ secrets.RELEASE_P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          RELEASE_CERTIFICATE_PATH=$RUNNER_TEMP/release_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$RELEASE_CERTIFICATE_BASE64" | base64 --decode --output $RELEASE_CERTIFICATE_PATH
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$DEV_P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security import $RELEASE_CERTIFICATE_PATH -P "$RELEASE_P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
      - name: Install the provisioning profile
        env:
          PP_FILE_DEV_BASE64: ${{ secrets.DEV_PROVISION_PROFILE_BASE64 }}
          PP_FILE_RELEASE_BASE64: ${{ secrets.RELEASE_PROVISION_PROFILE_BASE64 }}
        run: |
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          echo -n "$PP_FILE_DEV_BASE64" | base64 --decode --output $PP_PATH
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          RELEASE_PP_PATH=$RUNNER_TEMP/release_pp.mobileprovision
          echo -n "$PP_FILE_RELEASE_BASE64" | base64 --decode --output $RELEASE_PP_PATH
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $RELEASE_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Building IPA
        run: flutter build ipa --release --export-options-plist=ios/Runner/ExportOptions.plist
      - name: Make Artefact
        run: |
          zip artefact.zip build/ios/ipa/*.ipa
      # Collect the file and upload as artifact         
      - name: collect ipa artifacts
        uses: actions/upload-artifact@v3
        with:
         name: release-ipa
         # Path to the release files
         path: ./artefact.zip
      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision   
      # apk, aab
      - name: env
        env: # ADD environment variables
          PROPERTIES_PATH: "./android/key.properties"
          ALIAS_PASSWORD: ${{ secrets.ALIAS_PASSWORD }}
          JAVA_VERSION: "11"
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: ${{ env.JAVA_VERSION }} 
      - name: Create key file
        run: |
          echo keyPassword=\${{ secrets.KEY_PASSWORD }} > ${{env.PROPERTIES_PATH}}
          echo storePassword=\${{ secrets.KEY_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
          echo keyAlias=\${{ secrets.ALIAS_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
          echo "${{ secrets.KEY_JKS }}" | base64 --decode > android/app/key/KHKeyStore.jks
      - run: flutter build appbundle --release
      - uses: actions/upload-artifact@v3
        with:
          name: release-aab
          path: build/app/outputs/bundle/release/app-release.aab
      - run: flutter build apk --release
      - uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: 版號自動更新
          title: Automated Bump Version Number
          body: ''
          reviewers: MikeChen1109